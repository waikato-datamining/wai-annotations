"""
Script which automatically generates the CLI factories for
each of the component classes.
"""
from wai.common.cli import CLIFactory, CLIInstantiable

# The formats to generate factories for
FORMATS = ["coco", "vgg", "roi", "adams", "tf"]

# The sub-packages where to find classes requiring factories
PACKAGES = ["io", "convert"]

# The header to write at the beginning of each generated file
HEADER = (
    '"""\n'
    'Automatically generated by gen-cli.py.\n'
    '"""\n'
)

# Discover all classes requiring factories
scope = {}
for format in FORMATS:
    for package in PACKAGES:
        import_code = f"from wai.annotations.{format}.{package} import *"
        exec(import_code, scope)

# Filter components from scope
components = {key: value for key, value in scope.items()
              if isinstance(value, type) and issubclass(value, CLIInstantiable)}

# Write the factory for each component
for name, component in components.items():
    with open(f"./_{name}CLIFactory.py", "w") as file:
        file.write(HEADER)
        file.write(CLIFactory.code_for_class(component))

# Write the __init__.py file
with open("./__init__.py", "w") as file:
    file.write(HEADER)
    for name in components.keys():
        file.write(f"from ._{name}CLIFactory import {name}CLIFactory\n")
